name: Deploy to Production

on:
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_BACKEND: ${{ secrets.DOCKER_USERNAME }}/webapp_backend
  IMAGE_FRONTEND: ${{ secrets.DOCKER_USERNAME }}/webapp_frontend
  TAG: latest

jobs:
  deploy:
    runs-on: self-hosted   # <<< a te runnered fut a VM-en
    concurrency:
      group: deploy-production
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker login
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login ${{ env.REGISTRY }} -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Stop old containers (if any)
        run: |
          docker ps --filter "publish=8000" -q | xargs -r docker rm -f
          docker ps --filter "publish=3000" -q | xargs -r docker rm -f
          docker rm -f backend webapp_backend frontend webapp_frontend || true

      - name: Pull latest images
        run: |
          docker pull ${{ env.IMAGE_BACKEND }}:${{ env.TAG }}
          docker pull ${{ env.IMAGE_FRONTEND }}:${{ env.TAG }}

      - name: Run backend
        run: |
          docker run -d --name webapp_backend --restart=always \
            -p 8000:8000 \
            ${{ env.IMAGE_BACKEND }}:${{ env.TAG }}

      - name: Run frontend
        run: |
          docker run -d --name webapp_frontend --restart=always \
            -p 3000:80 \
            ${{ env.IMAGE_FRONTEND }}:${{ env.TAG }}

      - name: Show running containers
        run: |
          docker ps --format "table {{.Names}}\t{{.Image}}\t{{.Ports}}\t{{.Status}}"
