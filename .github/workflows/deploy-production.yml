name: Deploy to Production (Self-Hosted)

on:
  workflow_dispatch: {}

env:
  REGISTRY: docker.io
  IMAGE_BACKEND: ${{ secrets.DOCKER_USERNAME }}/webapp_backend
  IMAGE_FRONTEND: ${{ secrets.DOCKER_USERNAME }}/webapp_frontend
  TAG: latest
  C_BACKEND: webapp_backend
  C_FRONTEND: webapp_frontend
  PORT_BACKEND: "8000:8000"
  PORT_FRONTEND: "3000:80"

jobs:
  deploy:
    runs-on: self-hosted
    concurrency:
      group: deploy-production
      cancel-in-progress: true

    steps:
      - name: Checkout (opcion√°lis)
        uses: actions/checkout@v4

      - name: Print runner info (debug)
        run: |
          whoami
          hostname
          docker --version
          id -nG || true

      - name: Docker login
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login ${{ env.REGISTRY }} -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Pull latest images
        run: |
          set -euo pipefail
          docker pull ${{ env.IMAGE_BACKEND }}:${{ env.TAG }}
          docker pull ${{ env.IMAGE_FRONTEND }}:${{ env.TAG }}

      - name: Stop & remove old containers (idempotens)
        run: |
          docker rm -f ${{ env.C_BACKEND }}  || true
          docker rm -f ${{ env.C_FRONTEND }} || true

      - name: Run backend
        run: |
          docker run -d --name ${{ env.C_BACKEND }} --restart=always \
            -p ${{ env.PORT_BACKEND }} \
            ${{ env.IMAGE_BACKEND }}:${{ env.TAG }}

      - name: Run frontend
        run: |
          docker run -d --name ${{ env.C_FRONTEND }} --restart=always \
            -p ${{ env.PORT_FRONTEND }} \
            ${{ env.IMAGE_FRONTEND }}:${{ env.TAG }}

      - name: Show running containers
        run: |
          docker ps --format "table {{.Names}}\t{{.Image}}\t{{.Ports}}\t{{.Status}}"
